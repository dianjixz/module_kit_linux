commit bd5ed399b713eccc9f5ce6f51c807142032d76a8
Author: shizhicheng <shizhicheng@axera-tech.com>
Date:   Mon Sep 2 11:42:13 2024 +0800

    [AX620E-11099] vo: support global-blending for fb
    
    Change-Id: I576a09ad01d74798004f05474033c2f2b5114f5d

diff --git a/linux-4.19.125/drivers/gpu/drm/axera/ax_drm_plane.c b/linux-4.19.125/drivers/gpu/drm/axera/ax_drm_plane.c
index 982ae564a8..d1125ac9fe 100644
--- a/drivers/gpu/drm/axera/ax_drm_plane.c
+++ b/drivers/gpu/drm/axera/ax_drm_plane.c
@@ -31,6 +31,8 @@
 #define AX_FB_GET_COLOERKEY_VAL_HIGH(val)	(((val) >> 30) & 0x3FFFFFFF)
 #define AX_FB_GET_COLOERKEY_EN(val)		(((val) >> 60) & 0x1)
 #define AX_FB_GET_COLOERKEY_INV(val)		(((val) >> 61) & 0X1)
+#define AX_FB_GET_BLD_MODE(val)			((val) & 0xFF)
+#define AX_FB_GET_BLD_STRIDE(val)		(((val) >> 8) & 0xFFFF)
 
 static int ax_plane_atomic_check(struct drm_plane *plane,
 				 struct drm_plane_state *plane_state)
@@ -189,6 +191,8 @@ static int ax_plane_set_property(struct drm_plane *plane,
 		ax_plane->fb.phy_addr_y = val;
 	else if (property == ax_plane->props.phy_addr_c)
 		ax_plane->fb.phy_addr_c = val;
+	else if (property == ax_plane->props.phy_addr_alp)
+		ax_plane->fb.phy_addr_alp = val;
 	else if (property == ax_plane->props.crtc_x_offs)
 		ax_plane->fb.dst_x = val;
 	else if (property == ax_plane->props.layer_id)
@@ -200,6 +204,9 @@ static int ax_plane_set_property(struct drm_plane *plane,
 		ax_plane->fb.colorkey_inv = AX_FB_GET_COLOERKEY_INV(val);
 		ax_plane->fb.colorkey_val_low = AX_FB_GET_COLOERKEY_VAL_LOW(val);
 		ax_plane->fb.colorkey_val_high = AX_FB_GET_COLOERKEY_VAL_HIGH(val);
+	}else if (property == ax_plane->props.blend_info) {
+		ax_plane->fb.blend_mode = AX_FB_GET_BLD_MODE(val);
+		ax_plane->fb.stride_alp = AX_FB_GET_BLD_STRIDE(val);
 	}
 	return 0;
 }
@@ -317,6 +324,10 @@ int ax_plane_create(struct drm_crtc *crtc)
 		} else if (type == DRM_PLANE_TYPE_OVERLAY) {
 			ax_plane->props.colorkey = drm_property_create_range(drm_dev, DRM_MODE_PROP_ATOMIC, "COLORKEY", 0 , ~(u64)0);
 			drm_object_attach_property(&plane->base, ax_plane->props.colorkey, 0);
+			ax_plane->props.blend_info = drm_property_create_range(drm_dev, DRM_MODE_PROP_ATOMIC, "BLD_INFO", 0 , ~(u64)0);
+			drm_object_attach_property(&plane->base, ax_plane->props.blend_info, 0);
+			ax_plane->props.phy_addr_alp = drm_property_create_range(drm_dev, DRM_MODE_PROP_ATOMIC, "PHY_ADDR_ALP", 0 , ~(u64)0);
+			drm_object_attach_property(&plane->base, ax_plane->props.phy_addr_alp, 0);
 		}
 
 		ax_plane->props.crtc_x_offs = drm_property_create_range(drm_dev, DRM_MODE_PROP_ATOMIC, "CRTC_X_OFFS", 0, (u32)2048);
diff --git a/linux-4.19.125/drivers/gpu/drm/axera/ax_drm_plane.h b/linux-4.19.125/drivers/gpu/drm/axera/ax_drm_plane.h
index 462c06039b..c104afb1ec 100644
--- a/drivers/gpu/drm/axera/ax_drm_plane.h
+++ b/drivers/gpu/drm/axera/ax_drm_plane.h
@@ -21,9 +21,11 @@ struct ax_plane {
 		struct drm_property *blk_id_c;
 		struct drm_property *phy_addr_y;
 		struct drm_property *phy_addr_c;
+		struct drm_property *phy_addr_alp;
 		struct drm_property *layer_id;
 		struct drm_property *active;
 		struct drm_property *colorkey;
+		struct drm_property *blend_info;
 	} props;
 
 	struct ax_fb fb;
diff --git a/linux-4.19.125/drivers/gpu/drm/axera/ax_drm_vfb.c b/linux-4.19.125/drivers/gpu/drm/axera/ax_drm_vfb.c
index 1dc2a65cbe..96c42a6319 100644
--- a/drivers/gpu/drm/axera/ax_drm_vfb.c
+++ b/drivers/gpu/drm/axera/ax_drm_vfb.c
@@ -280,6 +280,7 @@ static int vfb_ioctl(struct fb_info *info, unsigned int cmd, unsigned long arg)
 	struct axfb_cursor_pos hot;
 	struct axfb_cursor_res res;
 	struct axfb_colorkey colorkey;
+	struct axfb_blend_info blend_info;
 	__u16 cursor_show;
 	void __user *argp = (void __user *)arg;
 	int ret = 0;
@@ -353,6 +354,21 @@ static int vfb_ioctl(struct fb_info *info, unsigned int cmd, unsigned long arg)
 		vfbdev->colorkey.enable = colorkey.enable;
 		vfbdev->colorkey.inv = colorkey.inv;
 
+		break;
+	case AX_FBIOGET_BLEND_INFO:
+		blend_info.mode = vfbdev->blend_info.mode;
+		blend_info.stride = vfbdev->blend_info.stride;
+		blend_info.phy_addr = vfbdev->blend_info.phy_addr;
+
+		ret = copy_to_user(argp, &blend_info, sizeof(blend_info)) ? -EFAULT : 0;
+		break;
+	case AX_FBIOPUT_BLEND_INFO:
+		if (copy_from_user(&blend_info, argp, sizeof(blend_info)))
+			return -EFAULT;
+
+		vfbdev->blend_info.mode = blend_info.mode;
+		vfbdev->blend_info.stride = blend_info.stride;
+		vfbdev->blend_info.phy_addr = blend_info.phy_addr;
 		break;
 	default:
 		ret = -ENOTTY;
diff --git a/linux-4.19.125/drivers/gpu/drm/axera/ax_drm_vfb.h b/linux-4.19.125/drivers/gpu/drm/axera/ax_drm_vfb.h
index 70e0ca08e4..b3cf724771 100644
--- a/drivers/gpu/drm/axera/ax_drm_vfb.h
+++ b/drivers/gpu/drm/axera/ax_drm_vfb.h
@@ -33,6 +33,11 @@ struct axfb_colorkey {
     u32 key_high;
 };
 
+struct axfb_blend_info {
+	u16 mode;
+	u16 stride;
+	u64 phy_addr;
+};
 
 #define AX_FBIOPUT_CURSOR_POS   _IOW('F', 0x21, struct axfb_cursor_pos)
 #define AX_FBIOPUT_CURSOR_RES   _IOW('F', 0x22, struct axfb_cursor_res)
@@ -42,5 +47,7 @@ struct axfb_colorkey {
 #define AX_FBIOGET_TYPE         _IOR('F', 0x26, u16)
 #define AX_FBIOGET_COLORKEY     _IOR('F', 0x27, struct axfb_colorkey)
 #define AX_FBIOPUT_COLORKEY     _IOW('F', 0x28, struct axfb_colorkey)
+#define AX_FBIOGET_BLEND_INFO   _IOR('F', 0x29, struct axfb_blend_info)
+#define AX_FBIOPUT_BLEND_INFO   _IOW('F', 0x2A, struct axfb_blend_info)
 
 #endif /* __AX_DRM_VFB_H */
diff --git a/linux-4.19.125/include/linux/ax_display_hal.h b/linux-4.19.125/include/linux/ax_display_hal.h
index da81c15bd1..bb075e8bb9 100644
--- a/include/linux/ax_display_hal.h
+++ b/include/linux/ax_display_hal.h
@@ -75,6 +75,13 @@ enum {
 	AX_VO_FORMAT_BUT,
 };
 
+enum {
+	AX_VO_BLEND_MODE_PER_PIXEL,
+	AX_VO_BLEND_MODE_GLOBAL0,
+	AX_VO_BLEND_MODE_GLOBAL1,
+	AX_VO_BLEND_MODE_BUT,
+};
+
 enum {
     AX_VO_CSC_MATRIX_IDENTITY = 0,
     AX_VO_CSC_MATRIX_BT601_TO_BT601,
@@ -138,6 +145,8 @@ struct ax_fb {
 
 	u32 format;
 
+	u32 blend_mode;
+
 	u32 fb_w;
 	u32 fb_h;
 
@@ -155,12 +164,14 @@ struct ax_fb {
 
 	u32 stride_y;
 	u32 stride_c;
+	u32 stride_alp;
 
 	u32 blk_id_y;
 	u32 blk_id_c;
 
 	u64 phy_addr_y;
 	u64 phy_addr_c;
+	u64 phy_addr_alp;
 };
 
 #define DISP_GAMMA_SIZE			(33 * 33)
diff --git a/linux-4.19.125/include/linux/ax_vfb.h b/linux-4.19.125/include/linux/ax_vfb.h
index 268d6d71b4..73fb2ca618 100644
--- a/include/linux/ax_vfb.h
+++ b/include/linux/ax_vfb.h
@@ -33,6 +33,11 @@ struct ax_fb_device {
 		u64 enable	: 1; /* [60] */
 		u64 inv		: 1; /* [61] */
 	} colorkey;
+	struct {
+		u16 mode;
+		u16 stride;
+		u64 phy_addr;
+	} blend_info;
 
 	void *pdev;
 	void *data;
